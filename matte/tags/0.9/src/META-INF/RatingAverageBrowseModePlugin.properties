###############################################################################
# Defaults settings for RatingAverageBrowseModePlugin
# These can be over-ridden in env.properties.
# $Id: RatingAverageBrowseModePlugin.properties,v 1.5 2007/10/01 09:21:20 matt Exp $
###############################################################################

###############################################################################
# sql.avgrate.index <sql>
# 
# The SQL query used for the avg. rating browse UI.
# 
# The SQL accepts these SQL parameters:
# 
# 1: user ID, to find items of one user
# 2: boolean "allow anonymous" boolean flag (TRUE or FALSE)
# 3: boolean "allow browse" boolean flat (TRUE or FALSE)

sql.avgrate.index=select \
	(case \
		when agg.avgrating is null then 0.0 \
		when agg.avgrating < 0.75 then 0.5 \
		when agg.avgrating < 1.25 then 1.0 \
		when agg.avgrating < 1.75 then 1.5 \
		when agg.avgrating < 2.25 then 2.0 \
		when agg.avgrating < 2.75 then 2.5 \
		when agg.avgrating < 3.25 then 3.0 \
		when agg.avgrating < 3.75 then 3.5 \
		when agg.avgrating < 4.25 then 4.0 \
		when agg.avgrating < 4.75 then 4.5 \
		else 5.0 \
	end) as avg_rating, \
	count(item.itemid) as item_count \
from media_item item \
inner join ( \
	select mi.itemid as sitemid \
	from media_item mi \
	inner join album_item ai on mi.itemid = ai.mediaitem_item_hjchildid \
	inner join album a on ai.album_item_hjid = a.albumid \
	where a.owner_ = ? and a.allowanonymous = ? and a.allowbrowse = ? \
) as shared \
on item.itemid = shared.sitemid \
inner join ( \
	select rating.mediaitem_userrating_hjid as ritemid, \
		avg(rating.rating) as avgrating \
	from media_item_rating rating, media_item item \
	where rating.mediaitem_userrating_hjid = item.itemid \
	group by rating.mediaitem_userrating_hjid \
) as agg \
on item.itemid = agg.ritemid \
group by avg_rating \
order by avg_rating desc

# TODO support owner-user ratings ONLY (sort by MY ratings, not AVG)

###############################################################################
# sql.avgrate.section <sql>
# 
# The SQL query used for the avg. rating browse UI for populating the items
# of a single index section. 
# 
# The SQL accepts these SQL parameters:
# 
# 1: user ID, to find items of one user
# 2: boolean "allow anonymous" boolean flag (TRUE or FALSE)
# 3: boolean "allow browse" boolean flat (TRUE or FALSE)
# 4: rating section, the rating section (float)
# 5: rating section, the rating section (float) again

sql.avgrate.section=select item.itemid as item_id, item.name_ as item_name, \
item.mime as item_mime, \
agg.avg_rating as avg_rating \
from media_item item \
inner join ( \
	select mi.itemid as sitemid \
	from media_item mi \
	inner join album_item ai on mi.itemid = ai.mediaitem_item_hjchildid \
	inner join album a on ai.album_item_hjid = a.albumid \
	where a.owner_ = ? and a.allowanonymous = ? and a.allowbrowse = ? \
) as shared \
on item.itemid = shared.sitemid \
inner join ( \
	select rating.mediaitem_userrating_hjid as ritemid, \
		avg(rating.rating) as avg_rating \
	from media_item_rating rating, media_item item \
	where rating.mediaitem_userrating_hjid = item.itemid \
	group by rating.mediaitem_userrating_hjid \
) as agg \
on item.itemid = agg.ritemid \
where agg.avg_rating >= (? - 0.25) and agg.avg_rating < (? + 0.25) \
order by agg.avg_rating desc, item.itemid asc
