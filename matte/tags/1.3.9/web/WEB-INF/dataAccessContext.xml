<?xml version="1.0" encoding="UTF-8"?>
<!--
	DAO implementations. Depends on beans defined in webEnvironmentContext.xml
	(or other context for command-line tools and unit tests).
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
	
	<bean id="mySessionFactory" 
		class="magoffin.matt.ma2.dao.hbm.LocalSessionFactoryBean">
		<property name="dataSource" ref="myDataSource"/>
		<property name="mappingResources">
			<list>
				<value>magoffin/matt/ma2/dao/hbm/ma2.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/Album.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/Collection.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/MediaItem.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/MediaItemRating.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/MediaItemType.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/Metadata.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/Theme.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/TimeZone.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/User.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/UserComment.hbm.xml</value>
				<value>magoffin/matt/ma2/domain/UserTag.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.cache.provider_class">magoffin.matt.util.Hibernate3EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">ehcache.xml</prop>
				<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
			</props>
		</property>
		<property name="sqlFunctions" ref="sqlFunctionsMap"/>
	</bean>
	
	
	<!-- 
	  myTransactionManager: the Hibernate transaction manager
	  -->
	<bean id="myTransactionManager" name="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="mySessionFactory"/>
		<property name="dataSource" ref="myDataSource"/>
	</bean>
	
	<!--
	  myTransactionInterceptor: transaction interceptor to enable 
	  declaritive transactions
	  -->
	<bean id="myTransactionInterceptor" 
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="myTransactionManager"/>
		<property name="transactionAttributeSource">
			<value>
				magoffin.matt.ma2.biz.IOBiz.export*=PROPAGATION_REQUIRED,readOnly
				magoffin.matt.ma2.biz.MediaBiz.add*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.MediaBiz.delete*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.MediaBiz.get*=PROPAGATION_REQUIRED,readOnly
				magoffin.matt.ma2.biz.MediaBiz.increment*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.MediaBiz.move*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.MediaBiz.remove*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.MediaBiz.share*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.MediaBiz.store*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.MediaBiz.unShare*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.SearchBiz.findAlbums*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.SystemBiz.delete*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.SystemBiz.store*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.UserBiz.confirm*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.UserBiz.forgot*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.UserBiz.get*=PROPAGATION_REQUIRED,readOnly
				magoffin.matt.ma2.biz.UserBiz.logon*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.UserBiz.new*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.UserBiz.register*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.UserBiz.remove*=PROPAGATION_REQUIRED
				magoffin.matt.ma2.biz.UserBiz.store*=PROPAGATION_REQUIRED
				magoffin.matt.lucene.LucenePlugin.index*=PROPAGATION_REQUIRED,readOnly
				magoffin.matt.dao.BatchableDao.batchProcess=PROPAGATION_REQUIRED
				<!--magoffin.matt.lucene.LucenePlugin.reindex*=PROPAGATION_REQUIRED,readOnly-->
				<!--org.springframework.web.servlet.mvc.Controller.handleRequest=PROPAGATION_REQUIRED-->
			</value>
		</property>
	</bean>
	
	<!--
	 myJdbcTemplate: Spring JdbcTemplate to make hand-coded JDBC calls
	 -->
	<bean id="myJdbcTemplate" name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="myDataSource"/>
	</bean>
	
	
	<!--
	 myTransactionTemplate: Spring TransactionTemplate to make hand-coded JDBC transactions
	 -->
	<bean id="myTransactionTemplate" name="transactionTemplate" 
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="myTransactionManager"/>
	</bean>
	
	
	<!--
	  baseDAO: base bean definition for HibernateDaoSupport implementations
	  -->
	<bean id="baseMediaAlbumDao" abstract="true">
		<property name="sessionFactory" ref="mySessionFactory"/>
		<property name="updateMode" value="CONDITIONALLY_MERGE"/>
	</bean>
	

		<!-- Hibernate support for open sessions in view processing -->
	<bean id="openSessionInViewInterceptor" 
		class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
		<property name="singleSession" value="true"/>
		<property name="sessionFactory" ref="mySessionFactory"/>
	</bean>
	
	
	<!--======================================================================
		DAO definitions.
		======================================================================-->
	
	<bean id="albumDao" parent="baseMediaAlbumDao"
		class="magoffin.matt.ma2.dao.hbm.HibernateAlbumDao"/>
	
	<bean id="collectionDao" parent="baseMediaAlbumDao"
		class="magoffin.matt.ma2.dao.hbm.HibernateCollectionDao"/>
	
	<bean id="mediaItemDao" parent="baseMediaAlbumDao"
		class="magoffin.matt.ma2.dao.hbm.HibernateMediaItemDao"/>
	
	<bean id="batchMediaItemDao"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="mediaItemDao"/>
		<property name="proxyInterfaces">
			<list>
				<value>magoffin.matt.dao.BatchableDao</value>
				<value>magoffin.matt.ma2.dao.MediaItemDao</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>myTransactionInterceptor</value>
			</list>
		</property>
	</bean>
	
	<bean id="settingsDao" 
		class="magoffin.matt.xweb.util.XwebJdbcParamDao">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
	
	<bean id="themeDao" parent="baseMediaAlbumDao"
		class="magoffin.matt.ma2.dao.hbm.HibernateThemeDao"/>
	
	<bean id="timeZoneDao" parent="baseMediaAlbumDao"
		class="magoffin.matt.ma2.dao.hbm.HibernateTimeZoneDao"/>
	
	<bean id="userDao" parent="baseMediaAlbumDao"
		class="magoffin.matt.ma2.dao.hbm.HibernateUserDao"/>
	
	<bean id="batchUserDao"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="userDao"/>
		<property name="proxyInterfaces">
			<list>
				<value>magoffin.matt.dao.BatchableDao</value>
				<value>magoffin.matt.ma2.dao.UserDao</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>myTransactionInterceptor</value>
			</list>
		</property>
	</bean>
	
</beans>
