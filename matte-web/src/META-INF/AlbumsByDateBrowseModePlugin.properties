###############################################################################
# Defaults settings for AlbumsByDateBrowseModePlugin
# These can be over-ridden in env.properties.
# $Id$
###############################################################################

###############################################################################
# sql.browse <sql>
# 
# The SQL query used for the album browse UI. Accepts these SQL parameters:
# 
# 1: boolean "allow anonymous" flag
# 2: boolean "allow feed" flag
# 
# The SQL string contains these template parameters:
# 
# {0} - parent album ID where clause, for "is null" or "in (1,2,3...)"
# {1} - additional where clause terms, based on query criteria
# {2} - order by clause, for "album_date desc" or "album.album_album_hjid, album.album_album_hjindex"

sql.browse=select album.albumid as album_id, album.album_album_hjid as parent_album_id, \
		(case when album.albumdate is null then album.creationdate else album.albumdate end) as album_date, \
		album.name_ as album_name, album.anonymouskey as album_key, album.comment_ as album_comment, \
		album.creationdate as album_creation_date, album.modifydate as album_modify_date, \
		agg.item_count, agg.item_min_date, agg.item_max_date, \
		case when poster.itemid is null then first_item.posterid else poster.itemid end as posterid, \
		case when poster.itemid is null then first_item.postername else poster.name_ end as poster_name \
from album album \
left outer join (select ai.album_item_hjid as albumid, \
	min(case when item.itemdate is null then item.creationdate else item.itemdate end) as item_min_date, \
	max(case when item.itemdate is null then item.creationdate else item.itemdate end) as item_max_date, \
	count(*) as item_count \
	from album_item ai, media_item item \
	where ai.mediaitem_item_hjchildid = item.itemid \
	group by album_item_hjid) as agg \
on album.albumid = agg.albumid \
left outer join (select ai.album_item_hjid as albumid, \
	min(item.itemid) as posterid, min(item.name_) as postername \
	from album_item ai, media_item item \
	where ai.mediaitem_item_hjchildid = item.itemid \
		and album_item_hjindex = 0 \
	group by album_item_hjid) as first_item \
on album.albumid = first_item.albumid \
left outer join media_item poster \
on album.poster = poster.itemid \
where album.album_album_hjid {0} and album.owner_ = ? and album.allowanonymous = ? \
	{1} \
order by {2}


###############################################################################
# sql.browse.order.toplevel <sql>
# sql.browse.order.child <sql>
# 
# The SQL order by clause to use for album browse UI, for top-level albums and
# child albums. The ordering is different because top-level albums have overall
# date ordering, while child albums have album-index ordering.

sql.browse.order.toplevel=album_date desc
sql.browse.order.child=album.album_album_hjid, album.album_album_hjindex


###############################################################################
# sql.browse.where.feed=and album.allowfeed <sql where clause>
# sql.browse.where.browse=and album.allowfeed <sql where clause>
# sql.browse.where.daterange <sql where clause>
# 
# SQL where clause inserted into sql.browse query to filter results.
# 
# The .feed and .browse clauses accept these SQL parameters:
# 
# 1: boolean flag
# 
# The .daterange clause accepts these SQL parameters:
# 
# 1: starting timestamp
# 2: ending timestamp

sql.browse.where.feed=and album.allowfeed = ?
sql.browse.where.browse=and album.allowbrowse = ?
sql.browse.where.daterange=and COALESCE(album.albumdate, album.creationdate) >= ? \
	and COALESCE(album.albumdate, album.creationdate) < ?

###############################################################################
# sql.browse.findYears=<sql clause>
# 
# SQL statement to find all years, ordered in descending order.

sql.browse.findYears=SELECT DISTINCT CAST(EXTRACT(year FROM COALESCE(albumdate, creationdate)) AS INTEGER) AS year \
	 FROM album WHERE \
	 	album.owner_ = ? \
	 	AND album.allowanonymous = ? \
	 	AND album.allowbrowse = ? \
	 	AND album.album_album_hjid IS NULL \
	 ORDER BY year DESC

